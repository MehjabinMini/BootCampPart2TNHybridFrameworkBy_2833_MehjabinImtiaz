<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="18" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-15T13:11:41 EST" name="Suite" finished-at="2023-11-15T13:13:57 EST" duration-ms="136777">
    <groups>
    </groups>
    <test started-at="2023-11-15T13:11:41 EST" name="Test" finished-at="2023-11-15T13:13:57 EST" duration-ms="136777">
      <class name="com.tutorialninja.testcases.Register_Test">
        <test-method is-config="true" signature="registerSetUp()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:42 EST" name="registerSetUp" finished-at="2023-11-15T13:12:46 EST" duration-ms="4428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetUp -->
        <test-method signature="registerAccountWithRequiredFields()[pri:1, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:46 EST" name="registerAccountWithRequiredFields" finished-at="2023-11-15T13:12:48 EST" duration-ms="1397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithRequiredFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:48 EST" name="tearDown" finished-at="2023-11-15T13:12:48 EST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="registerSetUp()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:48 EST" name="registerSetUp" finished-at="2023-11-15T13:12:52 EST" duration-ms="4460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetUp -->
        <test-method signature="registerAccountWithAllFields()[pri:2, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:52 EST" name="registerAccountWithAllFields" finished-at="2023-11-15T13:12:54 EST" duration-ms="1492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:54 EST" name="tearDown" finished-at="2023-11-15T13:12:54 EST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="registerSetUp()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:54 EST" name="registerSetUp" finished-at="2023-11-15T13:12:58 EST" duration-ms="4489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetUp -->
        <test-method signature="registerAccountWithNoFields()[pri:3, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:58 EST" name="registerAccountWithNoFields" finished-at="2023-11-15T13:12:59 EST" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithNoFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:59 EST" name="tearDown" finished-at="2023-11-15T13:12:59 EST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="registerSetUp()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:12:59 EST" name="registerSetUp" finished-at="2023-11-15T13:13:04 EST" duration-ms="4566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetUp -->
        <test-method signature="verifyRegisterWithDuplicateUserName()[pri:4, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:13:04 EST" name="verifyRegisterWithDuplicateUserName" finished-at="2023-11-15T13:13:05 EST" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterWithDuplicateUserName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.Register_Test@117159c0]" started-at="2023-11-15T13:13:05 EST" name="tearDown" finished-at="2023-11-15T13:13:05 EST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialninja.testcases.Register_Test -->
      <class name="com.tutorialninja.testcases.CheckOut_ValidProduct_Test">
        <test-method is-config="true" signature="check_ValidProduct_setUP()[pri:0, instance:com.tutorialninja.testcases.CheckOut_ValidProduct_Test@7ef82753]" started-at="2023-11-15T13:13:46 EST" name="check_ValidProduct_setUP" finished-at="2023-11-15T13:13:51 EST" duration-ms="4987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_ValidProduct_setUP -->
        <test-method signature="addAValidProductAndCheckOut()[pri:1, instance:com.tutorialninja.testcases.CheckOut_ValidProduct_Test@7ef82753]" started-at="2023-11-15T13:13:51 EST" name="addAValidProductAndCheckOut" finished-at="2023-11-15T13:13:57 EST" duration-ms="6646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAValidProductAndCheckOut -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.CheckOut_ValidProduct_Test@7ef82753]" started-at="2023-11-15T13:13:57 EST" name="closer" finished-at="2023-11-15T13:13:57 EST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
      </class> <!-- com.tutorialninja.testcases.CheckOut_ValidProduct_Test -->
      <class name="com.tutorialninja.testcases.Login_Test">
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:42 EST" name="loginSetUp" finished-at="2023-11-15T13:11:48 EST" duration-ms="6321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:48 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:11:50 EST" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:50 EST" name="closer" finished-at="2023-11-15T13:11:50 EST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:50 EST" name="loginSetUp" finished-at="2023-11-15T13:11:54 EST" duration-ms="4068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:54 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:11:55 EST" duration-ms="919" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:55 EST" name="closer" finished-at="2023-11-15T13:11:55 EST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:11:55 EST" name="loginSetUp" finished-at="2023-11-15T13:12:00 EST" duration-ms="4742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:00 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:12:01 EST" duration-ms="941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:01 EST" name="closer" finished-at="2023-11-15T13:12:01 EST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:01 EST" name="loginSetUp" finished-at="2023-11-15T13:12:05 EST" duration-ms="4115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:05 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:12:06 EST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:06 EST" name="closer" finished-at="2023-11-15T13:12:06 EST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:06 EST" name="loginSetUp" finished-at="2023-11-15T13:12:10 EST" duration-ms="4368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:10 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:12:11 EST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda4@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:11 EST" name="closer" finished-at="2023-11-15T13:12:11 EST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:11 EST" name="loginSetUp" finished-at="2023-11-15T13:12:15 EST" duration-ms="4145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:15 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:12:16 EST" duration-ms="1038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda5@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:16 EST" name="closer" finished-at="2023-11-15T13:12:17 EST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:17 EST" name="loginSetUp" finished-at="2023-11-15T13:12:21 EST" duration-ms="4201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyingLoginWithValidUserNameAndValidPassword(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:21 EST" name="verifyingLoginWithValidUserNameAndValidPassword" data-provider="TN" finished-at="2023-11-15T13:12:22 EST" duration-ms="948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[seleniumpanda6@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Selenium@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:22 EST" name="closer" finished-at="2023-11-15T13:12:22 EST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:22 EST" name="loginSetUp" finished-at="2023-11-15T13:12:26 EST" duration-ms="4206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyLoginWithInValidUserNameAndValidPassword()[pri:2, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:26 EST" name="verifyLoginWithInValidUserNameAndValidPassword" finished-at="2023-11-15T13:12:27 EST" duration-ms="778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:27 EST" name="closer" finished-at="2023-11-15T13:12:27 EST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:27 EST" name="loginSetUp" finished-at="2023-11-15T13:12:31 EST" duration-ms="4068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyLoginWithValidUserNameAndInValidPassword()[pri:3, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:31 EST" name="verifyLoginWithValidUserNameAndInValidPassword" finished-at="2023-11-15T13:12:32 EST" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidUserNameAndInValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:32 EST" name="closer" finished-at="2023-11-15T13:12:32 EST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:32 EST" name="loginSetUp" finished-at="2023-11-15T13:12:36 EST" duration-ms="4183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyLoginWithInValidUserNameAndInValidPassword()[pri:4, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:36 EST" name="verifyLoginWithInValidUserNameAndInValidPassword" finished-at="2023-11-15T13:12:37 EST" duration-ms="749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInValidUserNameAndInValidPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:37 EST" name="closer" finished-at="2023-11-15T13:12:37 EST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
        <test-method is-config="true" signature="loginSetUp()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:37 EST" name="loginSetUp" finished-at="2023-11-15T13:12:41 EST" duration-ms="4405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetUp -->
        <test-method signature="verifyLoginWithNoUserNameAndNoPassword()[pri:5, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:41 EST" name="verifyLoginWithNoUserNameAndNoPassword" finished-at="2023-11-15T13:12:42 EST" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithNoUserNameAndNoPassword -->
        <test-method is-config="true" signature="closer()[pri:0, instance:com.tutorialninja.testcases.Login_Test@6574a52c]" started-at="2023-11-15T13:12:42 EST" name="closer" finished-at="2023-11-15T13:12:42 EST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
      </class> <!-- com.tutorialninja.testcases.Login_Test -->
      <class name="com.tutorialninja.testcases.SearchTest">
        <test-method is-config="true" signature="Search_Product_setUP()[pri:0, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:05 EST" name="Search_Product_setUP" finished-at="2023-11-15T13:13:09 EST" duration-ms="3771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Product_setUP -->
        <test-method signature="searchProductWithValidProduct()[pri:1, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:09 EST" name="searchProductWithValidProduct" finished-at="2023-11-15T13:13:09 EST" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:09 EST" name="tearDown" finished-at="2023-11-15T13:13:09 EST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="Search_Product_setUP()[pri:0, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:09 EST" name="Search_Product_setUP" finished-at="2023-11-15T13:13:20 EST" duration-ms="10791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Product_setUP -->
        <test-method signature="verifySearchWithInvalidProduct()[pri:2, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:20 EST" name="verifySearchWithInvalidProduct" finished-at="2023-11-15T13:13:41 EST" duration-ms="20644" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[text() = 'There is no product that matches the search criteria.']"}
  (Session info: chrome=119.0.6045.125)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [500fe0e945db24ae7b6b68ad347def53, findElement {using=xpath, value=//p[text() = 'There is no product that matches the search criteria.']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.125, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: C:\Users\imtia\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65342}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65342/devtoo..., se:cdpVersion: 119.0.6045.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 500fe0e945db24ae7b6b68ad347def53]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[text() = 'There is no product that matches the search criteria.']"}
  (Session info: chrome=119.0.6045.125)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [500fe0e945db24ae7b6b68ad347def53, findElement {using=xpath, value=//p[text() = 'There is no product that matches the search criteria.']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.125, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: C:\Users\imtia\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65342}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65342/devtoo..., se:cdpVersion: 119.0.6045.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 500fe0e945db24ae7b6b68ad347def53
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:364)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.isDisplayed(Unknown Source)
at com.qa.tutorialsninja.Pages.SearchPage.displayStatusInvalidOrNoProduct(SearchPage.java:55)
at com.tutorialninja.testcases.SearchTest.verifySearchWithInvalidProduct(SearchTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithInvalidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:41 EST" name="tearDown" finished-at="2023-11-15T13:13:41 EST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="Search_Product_setUP()[pri:0, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:41 EST" name="Search_Product_setUP" finished-at="2023-11-15T13:13:45 EST" duration-ms="3591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_Product_setUP -->
        <test-method signature="verifySearchWithNoProduct()[pri:3, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:45 EST" name="verifySearchWithNoProduct" finished-at="2023-11-15T13:13:45 EST" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithNoProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialninja.testcases.SearchTest@3e27ba32]" started-at="2023-11-15T13:13:45 EST" name="tearDown" finished-at="2023-11-15T13:13:46 EST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialninja.testcases.SearchTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
